<?xml version="1.0" encoding="UTF-8"?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan = "true" scanPeriod = "10 seconds">
    <property name = "LOG_HOME" value = "./logs"/>
    <define name = "APP_NAME" class = "cn.strivers.mybase.web.log.LogbackConfig"/>
    <contextName>logback</contextName>
    <!-- name的值是变量的名称，value的值时变量定义的值。通过定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。 -->
    <property name = "log.path" value = "logs"/>

    <!-- 彩色日志格式，%black 黑色 %red 红色 %green 绿色 %yellow 黄色 %blue 蓝色 %magenta 洋红色 %cyan 青色 %white 白色 %gray 灰色 %highlight 高亮色-->
    <!-- 彩色日志格式，加粗 %boldRed %boldGreen %boldYellow %boldBlue %boldMagenta %boldCyan %boldWhite-->
    <!--   sw_ctx: [$serviceName,$instanceName,$traceId,$traceSegmentId,$spanId]-->
    <!--   tid-->
    <property name = "CONSOLE_LOG_PATTERN"
              value = "%boldMagenta(%d{yyyy-MM-dd HH:mm:ss.SSS}) %cyan(%-5level) %yellow(${PID:- }) %red([%thread]) %blue(%logger{128}%n) %magenta(·⊱══>) %white(%msg%n)"/>

    <!-- 控制台输出 -->
    <appender name = "CONSOLE" class = "ch.qos.logback.core.ConsoleAppender">
        <encoder class = "ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name = "CONSOLE_ASYNC" class = "ch.qos.logback.classic.AsyncAppender">
        <!-- 阻塞队列的最大容量 默认为256 -->
        <queueSize>1024</queueSize>
        <!-- 阻塞队列剩余容量默认20% 0全部输出 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 引用同步，将其包装为异步 -->
        <appender-ref ref = "CONSOLE"/>
        <!-- 超出队列的日志处理策略，默认丢弃，true为阻塞，false为丢弃，默认为false -->
        <neverBlock>true</neverBlock>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name = "FILE" class = "ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class = "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/${APP_NAME}.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>15</MaxHistory>
            <MaxFileSize>1GB</MaxFileSize>
            <!--该滚动策略日志的总大小，超过的日志会被清除-->
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 日志输出级别 -->
    <root level = "INFO">
        <appender-ref ref = "FILE"/>
        <!-- 采用异步输出 -->
        <appender-ref ref = "CONSOLE_ASYNC"/>
    </root>
</configuration>